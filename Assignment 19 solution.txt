								        Assignment 19


1. Write a program to find the number of vowels in each of the 5 strings stored in two 
dimensional arrays, taken from the user.

#include <stdio.h>
#include<string.h>
int main()
{
     char s[5][10];
     int i, j, v = 0;
     printf("enter strings: ");
     for (i = 0; i < 5; i++)
     {  
        fgets(s[i], 10, stdin);
        s[i][strlen(s)-1] = '\0';
     }
     for (i = 0; i < 5; i++)
     {
          for (j = 0; s[i][j] != '\0'; j++)
          {
               if (s[i][j] == 'a' || s[i][j] == 'e' || s[i][j] == 'i' || s[i][j] == 'o' || s[i][j] == 'u')
                    v++;
          }
          printf("%s = %d\n",s[i], v);
          v = 0;
     }
}




2. Write a program to sort 10 city names stored in two dimensional arrays, taken from the user.

#include<stdio.h>
#include<string.h>
int main()
{
     char city[10][20], temp[20];
     int i,j;
     printf("enter cities name: ");
     for (i = 0; i < 10; i++)
     {
          gets(city[i]);
     }
     for (i = 0; i < 10; i++)
     {
          for(j = i+1; j < 10; j++)
          {
               if(strcmp(city[i],city[j])>0)
               {
                    strcpy(temp,city[i]);
                    strcpy(city[i],city[j]);
                    strcpy(city[j],temp);
               }
          }
     }
     for (i = 0; i < 10; i++)
     {
          printf("%s ",city[i]);
     }
     
}





3. Write a program to read and display a 2D array of strings in C language.

#include<stdio.h>
int main()
{
     char city[5][20];
     int i;
     printf("enter cities name: ");
     for (i = 0; i < 5; i++)
     {
          fgets(city[i],20,stdin);
     }
     printf("our 2D array is:- ");
     for (i = 0; i < 5; i++)
     {
          printf("%s ",city[i]);
     }
}




4. Write a program to search a string in the list of strings.

#include<stdio.h>
#include<string.h>
int main()
{
     char ci[5][20],c[20];
     int i,f=0;
     printf("enter an string ");
     fgets(c,20,stdin);
     printf("enter strings: ");
     for (i = 0; i < 5; i++)
     {
          fgets(ci[i],20,stdin);
     }
     for (i = 0; i < 5; i++)
     {
          if(strcmp(ci[i],c) == 0)
          {
               f++;
               break;
          }
     }
     if (f==1)
          printf("string found");
     else
          printf("Not found");    
     
}




5. Suppose we have a list of email addresses, check whether all email addresses have 
‘@’ in it. Print the odd email out.

#include<stdio.h>
#include<string.h>
int main()
{
     char email[5][20];
     int i;
     printf("enter emails : ");
     for (i = 0; i < 5; i++)
     {
          fgets(email[i],20,stdin);
     }
     for (i = 0; i < 5; i++)
     {
          if (strchr(email[i],'@') != 0)
               printf("%s\n",email[i]);
          
     }
     
}




6. Write a program to print the strings which are palindrome in the list of strings.

#include <stdio.h>
#include <string.h>
int main()
{
     char c[5][10] = {"malayalam", "madam", "music", "desktop", "jahaj"};
     int i, j, k;
    
     for (i = 0; i < 5; i++)
     {
          k = 0, j = strlen(c[i]) - 1;
          while (k <= j)
          {
               if (c[i][k] != c[i][j])
                    break;
               k++;
               j--;
          }
          if (k > j)
               printf("palindrome string: %s\n", c[i]);
     }
}




7. From the list of IP addresses, check whether all ip addresses are valid.

#include<stdio.h>
#include<string.h>
int main()
{
     char IP[20];
     int f=0;
     printf("Enter IP address:  ");
     gets(IP);
     char *a = strtok(IP,".");
     while (a!=NULL)
     {
          int n = atoi(a);
          if ((n >= 0) && (n <= 255)) 
               printf("%d ",n);
               f++;
          a = strtok(NULL, ".");
     }
     if(f == 4)
          printf("\nIP address are valid ");
     else
          printf("\nIP address are not valid ");
     return 0;
}




8. Given a list of words followed by two words, the task is to find the minimum distance 
between the given two words in the list of words.
(Example : s = {“the”,”quick”,”brown”,”fox”,”quick”}
 word1 = “the”, word2 = “fox”, OUTPUT : 1 )

#include <stdio.h>
#include <string.h>
int main()
{
     char words[5][10] = {"the", "quick", "brown", "quick", "fox"};
     char word1[] = "the", word2[] = "fox";
     int i, w1 = -1, w2 = -1, min = 10, temp;
     for (i = 0; i < 5; i++)
     {
          if (strcmp(words[i], word1) == 0)
               w1 = i;
          if (strcmp(words[i], word2) == 0)
               w2 = i;
          if (w1 != -1 && w2 != -1)
          {
               temp = abs(w2 - w1);
               if (temp < min)
                    min = temp;
          }
     }
     printf("minimum distance between two strings: %d", min - 1);
}




9. Write a program that asks the user to enter a username. If the username entered is 
one of the names in the list then the user is allowed to calculate the factorial of a 
number. Otherwise, an error message is displayed


#include<stdio.h>
#include<string.h>
int fact(int n)
{
     int i,f = 1;
     for (i = 1; i<=n; i++)
          f = f*i;
     return f;
}
int main()
{
     char list[5][10] = {"radha","shiv","brijlal","Ram","Shyam"}, name[10];
     int i,f=0;
     printf("Enter the user name  ");
     fgets(name,10,stdin);
     for (i = 0; i < 5; i++)
     {
          if(strcmp(list[i],name) == 0)
          {
               f++;
               break;
          }
     }
     if (f==1)
     {
          int r;
          r = fact(5);
          printf("factorial is: %d",r);
     }
     else
          printf("error!!");  
     return 0;
}



10. Create an authentication system. It should be menu driven.



