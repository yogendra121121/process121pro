								    Assignment 16


1. Write a program to calculate the sum of two matrices each of order 3x3.

#include<stdio.h>
int main()
{
     int a[3][3], b[3][3],i,j,sum[3][3];
     printf("enter a value of first matrix ");
     for(i = 0; i<3; i++)
     {
          for ( j = 0; j < 3; j++)
          {
               scanf("%d",&a[i][j]);
          }
     }
     printf("enter a value of second matrix ");
     for(i = 0; i<3; i++)
     {
          for ( j = 0; j < 3; j++)
          {
               scanf("%d",&b[i][j]);
          }
     }
     printf("Sum of matrices:-\n");
     for(i = 0; i<3; i++)
     {
          for ( j = 0; j < 3; j++)
          {
               sum[i][j] = a[i][j] + b[i][j];
               printf("%d  ",sum[i][j]);
          }
          printf("\n");
     }
     
}




2. Write a program to calculate the product of two matrices each of order 3x3.

#include<stdio.h>
int main()
{
     int a[3][3], b[3][3],i,j ,k,product[3][3];
     printf("enter a value of first matrix ");
     for(i = 0; i<3; i++)
     {
          for ( j = 0; j < 3; j++)
          {
               scanf("%d",&a[i][j]);
          }
     }
     printf("enter a value of second matrix ");
     for(i = 0; i<3; i++)
     {
          for ( j = 0; j < 3; j++)
          {
               scanf("%d",&b[i][j]);
          }
     }
     printf("Product of matrices:-\n");
     for(i = 0; i<3; i++)
     {
          for ( j = 0; j < 3; j++)
          {    
               product[i][j] = 0;
               for (k = 0; k < 3; k++)
               {
                    product[i][j] = product[i][j] + a[i][k] * b[k][j];
                    
               }
               printf("%d  ", product[i][j]);
          }
          printf("\n");
     }
}




3. Write a program in C to find the transpose of a given matrix.

#include<stdio.h>
int main()
{
     int a[3][3],i,j,tran[3][3];
     printf("enter a value of matrix ");
     for(i = 0; i < 3; i++)
     {
          for ( j = 0; j < 3; j++)
          {
               scanf("%d",&a[i][j]);
          }
     }
     printf("Before transpose our matrix is:- \n");
     for(i = 0; i < 3; i++)
     {
          for ( j = 0; j < 3; j++)
          {
               printf("%d  ",a[i][j]);
          }
          printf("\n");
     }
     printf("After transpose our matrix is:- \n");
     for(i = 0; i < 3; i++)
     {
          for ( j = 0; j < 3; j++)
          {
               tran[i][j] = a[j][i];
               printf("%d  ",tran[i][j]);
          }
          printf("\n");
     }

}




4. Write a program in C to find the sum of right diagonals of a matrix.

#include<stdio.h>
int main()
{
     int a[3][3],i,j,sum_R_d=0;
     printf("enter a value of matrix ");
     for(i = 0; i < 3; i++)
     {
          for ( j = 0; j < 3; j++)
          {
               scanf("%d",&a[i][j]);
          }
     }

     printf("Matrix is:- \n");
     for(i = 0; i < 3; i++)
     {
          for ( j = 0; j < 3; j++)
          {
               printf("%d  ",a[i][j]);
          }
          printf("\n");
     }
     for(i = 0; i < 3; i++)
     { 
          sum_R_d = sum_R_d + a[i][2-i];
     }
     printf("\nsum of right diagonals of a matrix: %d", sum_R_d);
}





5. Write a program in C to find the sum of left diagonals of a matrix.

#include<stdio.h>
int main()
{
     int a[3][3],i,j,sum_left_diagonal=0;
     printf("enter a value of matrix ");
     for(i = 0; i < 3; i++)
     {
          for ( j = 0; j < 3; j++)
          {
               scanf("%d",&a[i][j]);
          }
     }
     
     printf("Matrix is:- \n");
     for(i = 0; i < 3; i++)
     {
          for ( j = 0; j < 3; j++)
          {
               printf("%d  ",a[i][j]);
          }
          printf("\n");
     }
     for(i = 0; i < 3; i++)
     {
          for ( j = 0; j < 3; j++)
          {
               if (i == j)
               {
                    sum_left_diagonal += a[i][j]; 
               }
          }
     }
     printf("Sum of left diagonals is %d",sum_left_diagonal);

}




6. Write a program in C to find the sum of rows and columns of a Matrix.

#include<stdio.h>
int main()
{
     int a[3][3],i,j,sum_rows=0 ,sum_columns=0;
     printf("enter a value of matrix ");
     for(i = 0; i < 3; i++)
     {
          for ( j = 0; j < 3; j++)
          {
               scanf("%d",&a[i][j]);
          }
     }

     printf("Matrix is:- \n");
     for(i = 0; i < 3; i++)
     {
          for ( j = 0; j < 3; j++)
          {
               printf("%d  ",a[i][j]);
          }
          printf("\n");
     }
     for(i = 0; i < 3; i++)
     { 
          sum_columns = 0;
          for ( j = 0; j < 3; j++)
          {
               sum_columns = sum_columns + a[j][i];
          }
          printf("\nSum of column no %d is: %d",i+1, sum_columns);
     }
     printf("\n");
     for(i = 0; i < 3; i++)
     { 
          sum_rows = 0;
          for ( j = 0; j < 3; j++)
          {
               sum_rows = sum_rows + a[i][j];
          }
          printf("\nSum of column no %d is: %d",i+1, sum_rows);
     }

}




7. Write a program in C to print or display the lower triangular of a given matrix.

#include<stdio.h>
int main()
{
     int a[3][3],i,j;
     printf("enter a value of matrix ");
     for(i = 0; i < 3; i++)
     {
          for ( j = 0; j < 3; j++)
          {
               scanf("%d",&a[i][j]);
          }
     }

     printf("Matrix is:- \n");
     for(i = 0; i < 3; i++)
     {
          for ( j = 0; j < 3; j++)
          {
               printf("%d  ",a[i][j]);
          }
          printf("\n");
     }
     printf("\nOur lower triangular matrix is:- \n");
     for(i = 0; i < 3; i++)
     {
          for ( j = 0; j < 3; j++)
          {
               if (i<j)
                    a[i][j]=0;
               printf("%d  ",a[i][j]);
          }
          printf("\n");
     }

}




8. Write a program in C to print or display an upper triangular matrix.

#include<stdio.h>
int main()
{
     int a[3][3],i,j,sum=0;
     printf("enter a value of matrix ");
     for(i = 0; i < 3; i++)
     {
          for ( j = 0; j < 3; j++)
          {
               scanf("%d",&a[i][j]);
          }
     }

     printf("Matrix is:- \n");
     for(i = 0; i < 3; i++)
     {
          for ( j = 0; j < 3; j++)
          {
               printf("%d  ",a[i][j]);
          }
          printf("\n");
     }
     printf("\nOur upper triangular matrix is:- \n");
     for(i = 0; i < 3; i++)
     {
          for ( j = 0; j < 3; j++)
          {
               if (i>j)
                    a[i][j]=0;
               printf("%d  ",a[i][j]);
          }
          printf("\n");
     }

}




9. Write a program in C to accept a matrix and determine whether it is a sparse matrix.

#include<stdio.h>
int main()
{
     int x[3][3],i,j,count=0;
     printf("enter matrix elements ");
     for (i = 0; i < 3; i++)
     {
          for (j = 0; j < 3; j++)
          {
               scanf("%d",&x[i][j]);
          }
     }
     for (i = 0; i < 3; i++)
     {
          for (j = 0; j < 3; j++)
          {
               printf("%d  ",x[i][j]);
               if(x[i][j]==0)
                    count++;
          }
          printf("\n");
     }
     if (count>4)
          printf("sparse matrix");
     else
          printf("not sparse matrix");
     
}




10. Write a program in C to find the row with maximum number of 1s
#include<stdio.h>
int main()
{
     int a[3][3],i,j,sum_rows=0,index = 0, max = 0;
     printf("enter a value of matrix ");
     for(i = 0; i < 3; i++)
     {
          for ( j = 0; j < 3; j++)
          {
               scanf("%d",&a[i][j]);
          }
     }

     printf("Matrix is:- \n");
     for(i = 0; i < 3; i++)
     {
          for ( j = 0; j < 3; j++)
          {
               printf("%d  ",a[i][j]);
          }
          printf("\n");
     }
    
     for(i = 0; i < 3; i++)
     {    sum_rows = 0;
          for ( j = 0; j < 3; j++)
          {
               if (a[i][j]==1)
                    sum_rows = sum_rows + a[i][j];
          }
          if (sum_rows>max)
          {
               max = sum_rows;
               index = i;
          }
     }
     printf("%d row is with maximum number of 1s ",index+1);
}
